{"version":3,"sources":["uni_modules/uni-installApk/utssdk/app-android/index.uts","uni_modules/uni-installApk/utssdk/interface.uts","uni_modules/uni-installApk/utssdk/unierror.uts"],"sourcesContent":["import { InstallApkOptions, InstallApkSuccess } from \"../interface\" \nimport { InstallApkFailImpl } from \"../unierror\"\nimport Intent from 'android.content.Intent';\nimport Build from 'android.os.Build';\nimport File from 'java.io.File';\nimport FileProvider from 'androidx.core.content.FileProvider';\nimport Context from 'android.content.Context';\nimport Uri from 'android.net.Uri';\nimport FileOutputStream from 'java.io.FileOutputStream';\n\nexport function installApk(options : InstallApkOptions) : void {\n  const context = UTSAndroid.getAppContext() as Context\n  var filePath = UTSAndroid.convert2AbsFullPath(options.filePath)\n  var apkFile : File | null;\n  if (filePath.startsWith(\"/android_asset/\")) {\n    filePath = filePath.replace(\"/android_asset/\", \"\")\n    apkFile = copyAssetFileToPrivateDir(context, filePath)\n  } else {\n    apkFile = new File(filePath)\n  }\n\n  if (apkFile != null && !apkFile.exists() && !apkFile.isFile()) {\n    let error = new InstallApkFailImpl(1300002);\n    options.fail?.(error)\n    options.complete?.(error)\n    return\n  }\n  const intent = new Intent()\n  intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)\n  intent.setAction(Intent.ACTION_VIEW)\n\n  if (Build.VERSION.SDK_INT >= 24) {\n    const authority = context.getPackageName() + \".dc.fileprovider\"\n    const apkUri = FileProvider.getUriForFile(context, authority, apkFile as File)\n    intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);\n    intent.setDataAndType(apkUri, \"application/vnd.android.package-archive\");\n  } else {\n    intent.setDataAndType(Uri.fromFile(apkFile as File), \"application/vnd.android.package-archive\");\n  }\n\n  context.startActivity(intent)\n  const success : InstallApkSuccess = {\n    errMsg: \"success\"\n  }\n  options.success?.(success)\n  options.complete?.(success)\n}\n\n\nfunction copyAssetFileToPrivateDir(context : Context, fileName : string) : File | null {\n  try {\n    const destPath = context.getCacheDir().getPath() + \"/apks/\" + fileName\n    const outFile = new File(destPath)\n    const parentFile = outFile.getParentFile()\n    if (parentFile != null) {\n      if (!parentFile.exists()) {\n        parentFile.mkdirs()\n      }\n    }\n    if (!outFile.exists()) {\n      outFile.createNewFile()\n    }\n    const inputStream = context.getAssets().open(fileName)\n    const outputStream = new FileOutputStream(outFile)\n    let buffer = new ByteArray(1024);\n    do {\n      let len = inputStream.read(buffer);\n      if (len == -1) {\n        break;\n      }\n      outputStream.write(buffer, 0, len)\n    } while (true)\n\n    inputStream.close()\n    outputStream.close()\n\n    return outFile\n  } catch (e : Exception) {\n    e.printStackTrace()\n  }\n\n  return null\n}\n","export interface Uni {\n\t/**\n\t  * installApk()\n\t  * @description \n\t  * 安装apk\n\t  * @param {InstallApkOptions} \n\t  * @return {void} \n\t  * @uniPlatform {\n\t  *    \"app\": {\n\t  *        \"android\": {\n\t  *            \"osVer\": \"4.4\",\n\t  *  \t\t  \t \"uniVer\": \"3.94+\",\n\t  * \t\t\t \"unixVer\": \"3.94+\"\n\t  *        },\n\t  *        \"ios\": {\n\t  *            \"osVer\": \"x\",\n\t  *  \t\t  \t \"uniVer\": \"x\",\n\t  * \t\t\t \"unixVer\": \"x\"\n\t  *        }\n\t  *    }\n\t  * }\n\t  * @example\n\t   ```typescript\n\t\tuni.installApk({\n\t\t\tfilePath: \"/xx/xx/xx.apk\",\n\t\t\tcomplete: (res: any) => {\n\t\t\t  console.log(\"complete => \" + JSON.stringify(res));\n\t\t\t}\n\t\t});\n\t   ```\n\t  */\n\tinstallApk(options : InstallApkOptions) : void\n}\nexport type InstallApkSuccess = {\n\t/**\n\t * 安装成功消息\n\t */\n\terrMsg : string\n}\nexport type InstallApkComplete = any\nexport type InstallApkSuccessCallback = (res : InstallApkSuccess) => void\n/**\n * 错误码\n * - 1300002 找不到文件\n */\nexport type InstallApkErrorCode = 1300002\n/**\n * 网络请求失败的错误回调参数\n */\nexport interface InstallApkFail extends IUniError {\n\terrCode : InstallApkErrorCode\n};\nexport type InstallApkFailCallback = (err : InstallApkFail) => void\nexport type InstallApkCompleteCallback = (res : InstallApkComplete) => void\n\nexport type InstallApkOptions = {\n\t/**\n\t * apk文件地址\n\t */\n\tfilePath : string,\n\t/**\n\t * 接口调用成功的回调函数\n\t * @defaultValue null\n\t */\n\tsuccess ?: InstallApkSuccessCallback | null,\n\t/**\n\t * 接口调用失败的回调函数\n\t * @defaultValue null\n\t */\n\tfail ?: InstallApkFailCallback | null,\n\t/**\n\t * 接口调用结束的回调函数（调用成功、失败都会执行）\n\t * @defaultValue null\n\t */\n\tcomplete ?: InstallApkCompleteCallback | null\n}\n","import { InstallApkErrorCode, InstallApkFail } from \"./interface\"\n\n/**\n * 错误主题\n */\nexport const UniErrorSubject = 'uni-installApk';\n/**\n * 错误码\n * @UniError\n */\nexport const UniErrors : Map<InstallApkErrorCode, string> = new Map([\n\t/**\n\t * 找不到文件\n\t */\n\t[1300002, 'No such file'],\n]);\n\nexport class InstallApkFailImpl extends UniError implements InstallApkFail {\n\tconstructor(errCode : InstallApkErrorCode) {\n\t\tsuper();\n\t\tthis.errSubject = UniErrorSubject;\n\t\tthis.errCode = errCode;\n\t\tthis.errMsg = UniErrors[errCode] ?? \"\";\n\t}\n}\n"],"names":[],"mappings":";;AAMA,OAAoB,uBAAyB,CAAC;AAJ9C,OAAmB,sBAAwB,CAAC;AAK5C,OAAgB,eAAiB,CAAC;AAJlC,OAAkB,gBAAkB,CAAC;AAErC,OAAyB,kCAAoC,CAAC;;;;;;;;;;;;AAD9D,OAAiB,YAAc,CAAC;AAIhC,OAA6B,wBAA0B,CAAC;;;;;ACyBxB,WAApB;IAIX;qBAAS,MAAM,CAAA;AAChB;;;;;UACY,qBAAqB,GAAG;UACxB,6BAA6B,KAAM,sBAAsB,IAAI;UAK7D,sBAAsB,MAAO;UAIxB,iBAAuB;iBACvC,SAAU;;UAEC,0BAA0B,KAAM,mBAAmB,IAAI;UACvD,8BAA8B,KAAM,uBAAuB,IAAI;AAE3C,WAApB;IAIX;uBAAW,MAAM,CAAC;IAKlB,kBAAW,kCAAiC;IAK5C,eAAQ,+BAA8B;IAKtC,mBAAY,mCAAiC;AAC9C;;;;;ACtEO,IAAM,kBAAkB;AAKxB,IAAM,WAAY,yBAAyB,MAAM,IAAI,AAAI,IAAI;IAInE;AAAC,eAAO;QAAE;KAAe;CACzB;AAEM,WAAM,qBAA2B;;;;IACvC,YAAY,4BAA6B,IACxC,KAAK,GADqC;QAE1C,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,IAAI;IACrC;AACD;AFdO,IAAS,WAAW,0BAA2B,GAAI,IAAI,CAAC;IAC7D,IAAM,UAAU,WAAW,aAAa,GAAG,EAAE,CAAC;IAC9C,IAAI,WAAW,WAAW,mBAAmB,CAAC,QAAQ,QAAQ;IAC9D,IAAI,SAAU;IACd,IAAI,SAAS,UAAU,CAAC,oBAAoB;QAC1C,WAAW,SAAS,OAAO,CAAC,mBAAmB;QAC/C,UAAU,0BAA0B,SAAS;IAC/C,OAAO;QACL,UAAU,AAAI,KAAK;IACrB;IAEA,IAAI,WAAW,IAAI,IAAI,CAAC,QAAQ,MAAM,MAAM,CAAC,QAAQ,MAAM,IAAI;QAC7D,IAAI,QAAQ,mBAAuB,OAAO;QAC1C,QAAQ,IAAI,SAAG;QACf,QAAQ,QAAQ,SAAG;QACnB;IACF;IACA,IAAM,SAAS,AAAI;IACnB,OAAO,QAAQ,CAAC,OAAO,sBAAsB;IAC7C,OAAO,SAAS,CAAC,OAAO,WAAW;IAEnC,IAAI,MAAM,OAAO,CAAC,OAAO,IAAI,EAAE,EAAE;QAC/B,IAAM,YAAY,QAAQ,cAAc,KAAK;QAC7C,IAAM,SAAS,aAAa,aAAa,CAAC,SAAS,WAAW,QAAQ,EAAE,CAAC;QACzE,OAAO,QAAQ,CAAC,OAAO,8BAA8B;QACrD,OAAO,cAAc,CAAC,QAAQ;IAChC,OAAO;QACL,OAAO,cAAc,CAAC,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC,OAAO;IACvD;IAEA,QAAQ,aAAa,CAAC;IACtB,IAAM,4BACJ,SAAQ;IAEV,QAAQ,OAAO,SAAG;IAClB,QAAQ,QAAQ,SAAG;AACrB;AAGA,IAAS,0BAA0B,SAAU,OAAO,EAAE,UAAW,MAAM,GAAI,MAAY;IACrF,IAAI;QACF,IAAM,WAAW,QAAQ,WAAW,GAAG,OAAO,KAAK,WAAW;QAC9D,IAAM,UAAU,AAAI,KAAK;QACzB,IAAM,aAAa,QAAQ,aAAa;QACxC,IAAI,cAAc,IAAI,EAAE;YACtB,IAAI,CAAC,WAAW,MAAM,IAAI;gBACxB,WAAW,MAAM;YACnB;QACF;QACA,IAAI,CAAC,QAAQ,MAAM,IAAI;YACrB,QAAQ,aAAa;QACvB;QACA,IAAM,cAAc,QAAQ,SAAS,GAAG,IAAI,CAAC;QAC7C,IAAM,eAAe,AAAI,iBAAiB;QAC1C,IAAI,SAAS,AAAI,UAAU,IAAI;QAC/B,GAAG;YACD,IAAI,MAAM,YAAY,IAAI,CAAC;YAC3B,IAAI,OAAO,CAAC,CAAC,EAAE;gBACb,KAAM;YACR;YACA,aAAa,KAAK,CAAC,QAAQ,CAAC,EAAE;QAChC;eAAS,IAAI,CAAC;QAEd,YAAY,KAAK;QACjB,aAAa,KAAK;QAElB,OAAO;IACT;KAAE,OAAO,GAAI,WAAW;QACtB,EAAE,eAAe;IACnB;IAEA,OAAO,IAAI;AACb"}