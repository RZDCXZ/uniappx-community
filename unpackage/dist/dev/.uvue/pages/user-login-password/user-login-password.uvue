
	import { getURL } from '@/common/request.uts'
	import type { Result,UserDetail } from '@/common/type.uts'
	import { login } from "@/store/user.uts"
	export default {
		data() {
			return {
				username:"",
				password:"",
				isagree:false
			}
		},
		computed: {
			disabled(): boolean {
				return this.username.trim().length == 0 || this.password.trim().length == 0
			}
		},
		methods: {
			openForgetPassword(){
				uni.navigateTo({
					url: '/pages/user-forget-password/user-forget-password',
				});
			},
			submit(){
				if(this.disabled) return
				if(!this.isagree){
					uni.showToast({
						title: '请先阅读并同意用户协议和隐私政策',
						icon: 'none'
					});
					return
				}
				uni.showLoading({
					title: '登录中...',
					mask: false
				});
				
				uni.request<Result<UserDetail>>({
					url: getURL(`/user/login`),
					method:"POST",
					data:{
						username:this.username,
						password:this.password
					},
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						
						// 处理登录
						login(r.data as UserDetail)
						
						uni.navigateBack({
							delta: 2
						});
						setTimeout(function() {
							uni.showToast({
								title: '登录成功',
								icon: 'none'
							});
						}, 200);
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						uni.hideLoading()
					}
				});
			}
		}
	}


import _easycom_navbar from '@/components/navbar/navbar.uvue'
import _easycom_login_input from '@/components/login-input/login-input.uvue'
import _easycom_agreement from '@/components/agreement/agreement.uvue'
import _easycom_main_btn from '@/components/main-btn/main-btn.uvue'
function GenPagesUserLoginPasswordUserLoginPasswordRender(): any | null {
const _ctx = this
const _cache = this.$.renderCache
const _component_navbar = resolveEasyComponent("navbar",_easycom_navbar)
const _component_login_input = resolveEasyComponent("login-input",_easycom_login_input)
const _component_agreement = resolveEasyComponent("agreement",_easycom_agreement)
const _component_main_btn = resolveEasyComponent("main-btn",_easycom_main_btn)

  return createElementVNode(Fragment, null, [
    createVNode(_component_navbar),
    createElementVNode("view", utsMapOf({ class: "login-page" }), [
      createElementVNode("text", utsMapOf({ class: "login-title" }), "密码登录"),
      createVNode(_component_login_input, utsMapOf({
        "auto-focus": true,
        modelValue: _ctx.username,
        "onUpdate:modelValue": $event => {(_ctx.username) = $event},
        placeholder: "输入手机号/邮箱"
      }), null, 8 /* PROPS */, ["modelValue", "onUpdate:modelValue"]),
      createVNode(_component_login_input, utsMapOf({
        style: normalizeStyle(utsMapOf({"margin-top":"0"})),
        modelValue: _ctx.password,
        "onUpdate:modelValue": $event => {(_ctx.password) = $event},
        type: "safe-password",
        placeholder: "输入密码",
        "confirm-type": "send",
        onConfirm: _ctx.submit,
        btn: "忘记密码",
        onClick: _ctx.openForgetPassword
      }), null, 8 /* PROPS */, ["style", "modelValue", "onUpdate:modelValue", "onConfirm", "onClick"]),
      createElementVNode("view", utsMapOf({ class: "login-bottom" }), [
        createVNode(_component_agreement, utsMapOf({
          modelValue: _ctx.isagree,
          "onUpdate:modelValue": $event => {(_ctx.isagree) = $event}
        }), null, 8 /* PROPS */, ["modelValue", "onUpdate:modelValue"]),
        createVNode(_component_main_btn, utsMapOf({
          disabled: _ctx.disabled,
          borderRadius: "0",
          width: "750rpx",
          height: "98rpx",
          fontSize: "18px",
          onClick: () => {_ctx.submit()}
        }), utsMapOf({
          default: withSlotCtx((): any[] => ["登录"]),
          _: 1 /* STABLE */
        }), 8 /* PROPS */, ["disabled", "onClick"])
      ])
    ])
  ], 64 /* STABLE_FRAGMENT */)
}
const GenPagesUserLoginPasswordUserLoginPasswordStyles = []
