<template>
	<!-- 头部 -->
	<view class="list-item-header" @click.stop="openDetail">
		<avatar :src="item.avatar" style="margin-right: 27rpx;"></avatar>
		<view>
			<text class="nickname">{{ item.name }}</text>
			<text class="time">{{ item.create_time }} · {{ read_count }}次阅读</text>
		</view>
		<follow-button v-model="isfollow" :user_id="item.user_id"></follow-button>
	</view>
	<!-- 文字内容 -->
	<text class="content" @click.stop="openDetail">{{ item.title }}</text>
	
	<!-- 图片，单图，双图，多图 -->
	<view class="content-media" @click.stop="openDetail">
		<image v-for="(img,imgI) in item.images" :key="imgI" :src="img" :fade-show="true" mode="aspectFill" class="content-image" :class="imageClass"></image>
	</view>
	
	<!-- 所属话题 -->
	<view class="topic-tag" v-if="item.topic_name != null" @click.stop="openTopicDetail">
		<text class="topic-tag-icon">#</text>
		<text class="topic-tag-title">{{ item.topic_name }}</text>
		<text class="iconfont topic-tag-more">{{ '\ue60c' }}</text>
	</view>
	
	<!-- 操作按钮 -->
	<view class="actions">
		<icon-btn label="赞" :icon="'\ue6eb'" :count="ding_count" :active="action == 'ding'" @click="handleSupport('ding')"></icon-btn>
		<icon-btn label="踩" :icon="'\ue701'" :count="cai_count" :active="action == 'cai'" @click="handleSupport('cai')"></icon-btn>
		<icon-btn label="评论" :icon="'\ue648'" :count="comment_count" @click="openDetail"></icon-btn>
		<icon-btn label="分享" :icon="'\ue633'" :count="item.share_count" @click="openDetail"></icon-btn>
	</view>
	
	<view class="divider"></view>
	
</template>

<script>
	import { PropType } from "vue"
	import { ListItem,defaultResult,updateSupportEvent,updateArticleChangeEvent } from "@/common/type.uts"
	import { stepInt } from "@/common/utils.uts"
	import { getURL } from "@/common/request.uts"
	import { getToken,AuthAction } from "@/store/user.uts"
	export default {
		name:"article-list-item",
		props: {
			item: {
				type: Object as PropType<ListItem>,
				required:true 
			},
			inTopicDetail:{
				type:Boolean,
				default:false
			}
		},
		data() {
			return {
				isfollow: false,
				action:"",
				ding_count:0,
				ding_loading:false,
				cai_count:0,
				cai_loading:false,
				read_count:0,
				comment_count:0
			}
		},
		created(){
			this.isfollow = this.item.isfollow
			this.action = this.item.user_support_action
			this.ding_count = this.item.ding_count
			this.cai_count = this.item.cai_count
			this.read_count = this.item.read_count
			this.comment_count = this.item.comment_count
		},
		computed: {
			imageClass(): string {
				const count = this.item.images.length
				if(count == 1){
					return "one-image"
				} else if(count == 2){
					return "two-image"
				} else {
					return "more-image"
				}
			}
		},
		created() {
			this.isfollow = this.item.isfollow
		},
		methods: {
			// 更新评论数
			updateCommentCount(count:number){
				this.comment_count = count
			},
			// 更新阅读数
			updateReadCount(count:number){
				this.read_count = count
			},
			openTopicDetail(){
				if(this.inTopicDetail){
					return
				}
				uni.navigateTo({
					url: '/pages/topic-detail/topic-detail?id='+this.item.topic_id
				});
			},
			openDetail(){
				uni.navigateTo({
					url: '/pages/detail/detail?id='+this.item.id
				});
			},
			// 更新isfollow
			updateFollow(value:boolean) {
				this.isfollow = value
			},
			// 更新顶踩情况
			updateSupport(e:updateSupportEvent){
				this.action = e.action
				this.ding_count = e.ding_count
				this.cai_count = e.cai_count 
			},
			// 顶踩
			handleSupport(type : 'ding' | 'cai'){
				AuthAction(()=>{
					if(this.ding_loading || this.cai_loading){
						return
					}
					if(type == "ding"){
						this.ding_loading = true
					} else {
						this.cai_loading = true
					}
					uni.request<defaultResult>({
						url: getURL(`/support/${type}/${this.item.id}`),
						method:"POST",
						header:{
							token:getToken()
						},
						success: (res) => {
							let r = res.data
							if(r == null) return
							if(res.statusCode !=200){
								uni.showToast({
									title: r.msg,
									icon: 'none'
								});
								return
							}
							
							// 之前没有操作过
							if(this.action == ""){
								if(type == "ding"){
									this.ding_count = stepInt(this.ding_count)
								} else {
									this.cai_count = stepInt(this.cai_count)
								}
								this.action = type
							}
							// 之前操作过，操作一致，取消之前操作
							else if(this.action == type){
								if(type == "ding"){
									this.ding_count = stepInt(this.ding_count,"-")
								} else {
									this.cai_count = stepInt(this.cai_count,"-")
								}
								this.action = ""
							}
							// 之前操作，操作不一致
							else {
								if(type == "ding"){
									this.ding_count = stepInt(this.ding_count)
									this.cai_count = stepInt(this.cai_count,"-")
								} else {
									this.cai_count = stepInt(this.cai_count)
									this.ding_count = stepInt(this.ding_count,"-")
								}
								this.action = type
							}
							
							// 全局通知
							uni.$emit("onUpdateArticleChange",{
								// 帖子ID
								id:this.item.id,
								// 事件标识
								key:"updateSupport",
								// 转成string，方便后期其他事件传递其他参数
								value: JSON.stringify({
									ding_count:this.ding_count,
									cai_count:this.cai_count,
									action:this.action
								} as updateSupportEvent)
							} as updateArticleChangeEvent)
						},
						fail: (err) => {
							uni.showToast({
								title: err.errMsg,
								icon: 'none'
							});
						},
						complete: () => {
							this.ding_loading = false
							this.cai_loading = false
						}
					})
				})
			}
		},
	}
</script>

<style>
/* 头部 */
.list-item-header {
	flex-direction: row;
	align-items: center;
	padding-top: 26rpx;
	padding-left: 33rpx;
	padding-right: 33rpx;
}

.time {
	font-size: 13px;
	color: #a7a7a7;
	margin-top: 10rpx;
}
.nickname {
	color: #050505;
	text-overflow: ellipsis;
	max-width: 240rpx;
	height: 34rpx;
	font-size: 15px;
	font-weight: bold;
}
.content {
	padding-top: 25rpx;
	padding-left: 33rpx;
	padding-right: 33rpx;
	font-size: 16px;
	line-height: 1.5;
}
.content-media {
	flex-direction: row;
	flex-wrap: wrap;
	/* margin-top: 17rpx; */
	padding-left: 10rpx;
}
.content-image {
	margin-top: 10rpx;
	margin-right: 10rpx;
	background-color: #f0f0f0;
}
.one-image {
	width: 730rpx;
	height: 730rpx;
}
.two-image {
	width: 360rpx;
	height: 360rpx;
}
.more-image {
	height: 236rpx;
	width: 236rpx;
}
.topic-tag {
	flex-direction: row;
	margin: 0 30rpx;
	background-color: #fff3f7;
	border-radius: 50px;
	padding: 8rpx 20rpx;
	align-items: center;
	margin-top: 25rpx;
	align-self: flex-start;
}
.topic-tag-icon {
	font-weight: bold;
	margin: 0 10rpx;
	font-size: 18px;
	color: #fb5e7d;
}
.topic-tag-title {
	color: #000000;
	font-size: 14px;
}
.actions {
	flex-direction: row;
	align-items: center;
	height: 105rpx;
}

</style>