<template>
	<navbar></navbar>
	<view class="login-page">
		<text class="login-title">密码登录</text>
		<!-- 输入框 -->
		<login-input :auto-focus="true" v-model="username" placeholder="输入手机号/邮箱"></login-input>
		<login-input style="margin-top: 0;" v-model="password" type="safe-password" placeholder="输入密码" confirm-type="send" @confirm="submit" btn="忘记密码" @click="openForgetPassword"></login-input>
		
		<!-- 底部 -->
		<view class="login-bottom">
			<agreement v-model="isagree"></agreement>
			<main-btn :disabled="disabled" borderRadius="0" width="750rpx" height="98rpx" fontSize="18px" @click="submit()">登录</main-btn>
		</view>
		
	</view>
</template>

<script>
	import { getURL } from '@/common/request.uts'
	import type { Result,UserDetail } from '@/common/type.uts'
	import { login } from "@/store/user.uts"
	export default {
		data() {
			return {
				username:"",
				password:"",
				isagree:false
			}
		},
		computed: {
			disabled(): boolean {
				return this.username.trim().length == 0 || this.password.trim().length == 0
			}
		},
		methods: {
			openForgetPassword(){
				uni.navigateTo({
					url: '/pages/user-forget-password/user-forget-password',
				});
			},
			submit(){
				if(this.disabled) return
				if(!this.isagree){
					uni.showToast({
						title: '请先阅读并同意用户协议和隐私政策',
						icon: 'none'
					});
					return
				}
				uni.showLoading({
					title: '登录中...',
					mask: false
				});
				
				uni.request<Result<UserDetail>>({
					url: getURL(`/user/login`),
					method:"POST",
					data:{
						username:this.username,
						password:this.password
					},
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						
						// 处理登录
						login(r.data as UserDetail)
						
						uni.navigateBack({
							delta: 2
						});
						setTimeout(function() {
							uni.showToast({
								title: '登录成功',
								icon: 'none'
							});
						}, 200);
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						uni.hideLoading()
					}
				});
			}
		}
	}
</script>

<style>

</style>
