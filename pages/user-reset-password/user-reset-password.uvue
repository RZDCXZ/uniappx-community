<template>
	<navbar></navbar>
	<view class="login-page">
		<text class="login-title">{{ title }}</text>
		<text class="input-tip" v-if="phone != '' ">通过手机号 {{ phone }} 进行验证</text>
		<login-input style="margin-top: 10rpx;" v-model="code" placeholder="请输入验证码" :maxlength="6" :btn="time > 0 ? `${time}s` : '发送验证码'" @click="sendSmsCode"></login-input>
		<login-input :password="true" type="safe-password" style="margin-top: 0;" v-model="password" placeholder="请输入密码" confirm-type="send" @confirm="submit"></login-input>
		<text class="input-tip">温馨提示：密码为6-20位，至少包含大写/小写字母/数字符号2中组合</text>
		<!-- 底部 -->
		<view class="login-bottom">
			<main-btn :disabled="disabled" borderRadius="0" width="750rpx" height="98rpx" fontSize="18px" @click="submit()">完成</main-btn>
		</view>
	</view>
</template>

<script>
	import type { defaultResult,UserDetail,Result } from "@/common/type.uts"
	import { getURL } from "@/common/request.uts"
	import { getToken, userState,updatePassword } from '@/store/user.uts'
	export default {
		data() {
			return {
				code:"",
				password:"",
				time:0,
				type:"changepwd",
				phone:""
			}
		},
		onLoad(options:OnLoadOptions) {
			if(options.has("phone")){
				this.phone = options.get("phone") as string
			} else {
				this.phone = userState.phone as string
			}
			if(options.has("type")){
				this.type = options.get("type") as string
			}
		},
		computed: {
			title():string{
				if(this.type == "forget"){
					return "重置密码"
				}
				return "修改密码"
			},
			disabled(): boolean {
				return this.password.trim().length < 5
			},
			sendSmsDisabled(): boolean {
				return this.time > 0
			},
		},
		methods: {
			// 发送验证码
			sendSmsCode(){
				if(this.sendSmsDisabled) return
				uni.showLoading({
					title: '发送中...',
					mask: true
				});
				
				let data = {} as UTSJSONObject
				let url = "sendcode2"
				if(this.type == "forget"){
					data.set("phone",this.phone)
					url = "sendcode"
				}
				uni.request<defaultResult>({
					url: getURL(`/user/${url}`),
					method:"POST",
					data,
					header:{
						token:getToken()
					},
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						if(r.msg == "发送成功"){
							uni.showToast({
								title: '发送成功'
							});
						} 
						// 调试模式
						else {
							uni.showModal({
								content: r.msg,
								showCancel: false,
							});
						}
						// 开启倒计时
						this.handleSendSmsCode()
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						uni.hideLoading()
					}
				});
			},
			// 开启倒计时
			handleSendSmsCode(){
				this.time = 60
				let interval:number = 0
				interval = setInterval(()=>{
					this.time--
					if(this.time <= 0){
						clearInterval(interval)
					}
				},1000)
			},
			// 提交
			submit(){
				if(this.disabled) return
				uni.showLoading({
					title: '修改中...',
					mask: true
				});
				
				let data = {
					code:this.code,
					password:this.password
				} as UTSJSONObject
				
				if(this.type == "forget"){
					data.set("phone",this.phone)
				}
				
				uni.request<defaultResult>({
					url: getURL(`/user/${this.type}`),
					method:"POST",
					header:{
						token:getToken()
					},
					data,
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						
						let delta = 1
						
						if(this.type == "changepwd"){
							// 更新本地密码状态
							updatePassword()
						} else {
							delta = 2
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
						}
						
						setTimeout(()=>{
							uni.navigateBack({
								delta
							});
						},300)
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						uni.hideLoading()
					}
				});
			}
		}
	}
</script>

<style>

</style>
