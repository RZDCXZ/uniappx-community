<template>
	<view class="flex-1 flex" style="border-top: 1rpx solid #f2f2f2;">
		<scroll-view scroll-y="true" class="topic-navs">
			<view v-for="tn in topic_navs" :key="tn.id" class="topic-nav-item" :style="navActiveId == tn.id ? 'background-color:#ffffff;' : '' " @click="chooseTopicNav(tn.id)">
				<text :style=" navActiveId == tn.id ? 'color:#e95e6f' : 'color:#0c0c0c' ">{{ tn.title }}</text>
			</view>
		</scroll-view>
		<view class="flex-1" v-if="topic_list.length == 0">
			<loading :circle="true" v-if="loading"></loading>
			<tip title="暂无话题~" v-else></tip>
		</view>
		<list-view v-else class="flex-1" style="padding-left: 34rpx;" @scrolltolower="loadMore">
			<topic-list-item v-for=" item in topic_list " :key="item.id" :item="item"></topic-list-item>
			<list-item :type="4">
				<loading-more :loading="loading" :isEnded="isEnded"></loading-more>
			</list-item>
		</list-view>
	</view>
</template>

<script>
	import { getURL } from "@/common/request.uts"
	import type { TopicNav,Topic,Result,TopicResult } from "@/common/type.uts"

	export default {
		data() {
			return {
				navActiveId:2,
				topic_navs:[] as TopicNav[],
				
				topic_list:[] as Topic[],
				
				page:1,
				isEnded:false,
				loading:false
			}
		},
		onLoad() {
			this.loadCategories()
		},
		methods: {
			// 获取话题分类数据
			loadCategories(){
				uni.showLoading({
					title: '加载中...',
					mask: false
				});
				
				uni.request<Result<TopicNav[]>>({
					url: getURL('/category/topic'),
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						this.topic_navs = r.data as TopicNav[]
						// 默认选中第一个
						if(this.topic_navs.length > 0){
							this.chooseTopicNav(this.topic_navs[0].id)
						}
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						uni.hideLoading()
					}
				});
			},
			// 加载话题列表数据
			loadTopicList(){
				// 开启上拉加载状态
				this.loading = true
				
				uni.request<Result<TopicResult>>({
					url: getURL(`/category/${this.navActiveId}/topic/${this.page}`),
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						
						const resData = r.data as TopicResult | null
						if(resData == null) return
						
						// 是否还有数据
						this.isEnded = resData.last_page <= resData.current_page
						if(this.page == 1){
							this.topic_list = resData.data
						} else {
							this.topic_list.push(...resData.data)
						}
						
						// 页码+1
						this.page = this.isEnded ? resData.current_page : Math.floor(resData.current_page + 1)
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						this.loading = false
						// uni.hideLoading()
					}
				});
			},
			// 切换分类
			chooseTopicNav(id:number){
				this.navActiveId = id
				
				// uni.showLoading({
				// 	title: '加载中...',
				// 	mask: true
				// });
				
				// 重置页码
				this.isEnded = false
				this.page = 1
				this.topic_list.length = 0
				
				this.loadTopicList()
			},
			loadMore(){
				if(this.loading || this.isEnded) return
				this.loadTopicList()
			}
		}
	}
</script>

<style>
.topic-navs {
	width: 165rpx;
	background-color: #f9f9f9;
}
.topic-nav-item {
	height: 100rpx;
	align-items: center;
	justify-content: center;
}
</style>
