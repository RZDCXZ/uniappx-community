<template>
	<navbar></navbar>
	<view class="login-page">
		<text class="login-title">登录</text>
		<view class="login-info">
			<text class="login-info-phone">{{ phone }}</text>
			<text class="iconfont" style="color: #8f8f8f;">{{ '\ue668' }}</text>
		</view>
		<!-- 输入框 -->
		<login-input :auto-focus="true" v-model="code" placeholder="请输入验证码" :maxlength="6" @update:modelValue="submit"></login-input>
		
		<!-- 底部 -->
		<view class="login-bottom">
			<main-btn :disabled="disabled" borderRadius="0" width="750rpx" height="98rpx" fontSize="18px" @click="sendSmsCode">重新发送{{ time > 0 ? `${time}s` : '' }}</main-btn>
		</view>
		
	</view>
</template>

<script>
	import type { defaultResult,UserDetail,Result } from "@/common/type.uts"
	import { getURL } from "@/common/request.uts"
	import { login } from "@/store/user.uts"
	export default {
		data() {
			return {
				phone:"",
				code:"",
				time:0
			}
		},
		onLoad(options:OnLoadOptions) {
			if(options.has("phone")){
				this.phone = options.get("phone") as string
			}
		},
		// 进入页面自动获取验证码
		onReady() {
			if(this.phone.length == 11){
				// 发送短信
				this.sendSmsCode()
			}
		},
		computed: {
			disabled(): boolean {
				return this.time > 0
			}
		},
		methods: {
			submit(code:string){
				if(code.length < 6) return
				uni.showLoading({
					title: '登录中...',
					mask: true
				});
				uni.request<Result<UserDetail>>({
					url: getURL('/user/phonelogin'),
					method:"POST",
					data:{
						phone:this.phone,
						code:code
					},
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						// 处理登录
						login(r.data as UserDetail)
						uni.navigateBack({
							delta: 2
						});
						setTimeout(function() {
							uni.showToast({
								title: '登录成功',
								icon: 'none'
							});
						}, 200);
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						uni.hideLoading()
					}
				});
			},
			sendSmsCode(){
				uni.showLoading({
					title: '发送中...',
					mask: true
				});
				uni.request<defaultResult>({
					url: getURL('/user/sendcode'),
					method:"POST",
					data:{
						phone:this.phone
					},
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						if(r.msg == "发送成功"){
							uni.showToast({
								title: '发送成功'
							});
						} 
						// 调试模式
						else {
							uni.showModal({
								content: r.msg,
								showCancel: false,
							});
						}
						// 开启倒计时
						this.handleSendSmsCode()
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						uni.hideLoading()
					}
				});
			},
			// 开启倒计时
			handleSendSmsCode(){
				this.time = 60
				let interval:number = 0
				interval = setInterval(()=>{
					this.time--
					if(this.time <= 0){
						clearInterval(interval)
					}
				},1000)
			}
		}
	}
</script>

<style>
.login-info {
	flex-direction: row;
	align-items: center;
	margin-top: 40rpx;
}
.login-info-phone {
	color: #8f8f8f;
	font-weight: bold;
	margin-right: 20rpx;
}
</style>
