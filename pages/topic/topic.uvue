<template>
	<view class="flex flex-1" style="border-top: 1rpx solid #f2f2f2;">
		<scroll-view scroll-y="true" class="topic-navs">
			<view class="topic-nav-item flex-center" :class="{'active': activeNavId === tn.id}" v-for="tn in topicNavs"
				:key="tn.id" @click="selectNav(tn.id)">
				<text :style="tn.id === activeNavId?'color:#e95e6f':'color:#0c0c0c'">{{tn.title}}</text>
			</view>
		</scroll-view>
		<view class="flex-1" v-if="topicList.length === 0">
			<loading :circle="true" v-if="isLoading"></loading>
			<tip title="暂无话题~" v-else></tip>
		</view>
		<list-view v-else class="flex-1" style="padding-left: 34rpx;" @scrolltolower="loadMore">
			<topic-list-item v-for="topic in topicList" :key="topic.id" :item="topic"></topic-list-item>
			<list-item :type="4">
				<loading-more :isLoading="isLoading" :isEnded="isEnded"></loading-more>
			</list-item>
		</list-view>
	</view>
</template>

<script>
	import type { TopicNav, Topic } from '@/common/type'

	type Result = {
		msg : string
		data : TopicNav[] | null
		code : number
	}

	type TopicResult = {
		current_page : number
		per_page : number
		last_page : number
		total : number
		data : Topic[]
	}

	type Result2 = {
		msg : string
		data : TopicResult | null
		code : number
	}

	export default {
		data() {
			return {
				activeNavId: 0,
				topicNavs: [] as TopicNav[],
				topicList: [] as Topic[],
				page: 1 as number,
				isEnded: false,
				isLoading: false
			}
		},
		onLoad() {
			this.loadCategories()
		},
		methods: {
			selectNav(id : number) {
				this.activeNavId = id
				this.topicList.length = 0
				this.isEnded = false
				this.page = 1
				this.loadTopicList()
			},
			loadCategories() {
				uni.showLoading({
					title: '加载中',
					mask: false
				})

				uni.request<Result>({
					url: 'https://sqapi2.dishawang.com/api/v1/category/topic',
					success: res => {
						if (res.data === null) return
						if (res.statusCode !== 200) {
							uni.showToast({
								title: res.data!.msg,
								icon: 'none'
							});
							return
						}
						this.topicNavs = res.data?.data as TopicNav[]
						if (this.topicNavs.length > 0) {
							this.selectNav(this.topicNavs[0].id)
						}
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						})
					},
					complete: () => {
						uni.hideLoading()
						this.isLoading = false
					}
				});
			},
			loadTopicList() {
				this.isLoading = true
				uni.request<Result2>({
					url: `https://sqapi2.dishawang.com/api/v1/category/${this.activeNavId}/topic/${this.page}`,
					success: res => {
						let r = res.data
						if (r === null) return
						if (res.statusCode !== 200) {
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						const resData = r.data as TopicResult | null

						if (resData === null) return

						this.isEnded = resData.last_page <= resData.current_page

						if (this.page === 1) {
							this.topicList = resData.data as Topic[]
						} else {
							this.topicList.push(...resData.data)
						}

						this.page = this.isEnded ? resData.current_page : Math.floor(resData.current_page + 1)
					},
					fail: () => { },
					complete: () => {
						this.isLoading = false
					}
				});
			},
			loadMore() {
				if (this.isLoading || this.isEnded) return
				this.loadTopicList()
			}
		}
	}
</script>

<style>
	.topic-navs {
		width: 165rpx;
		background-color: #f9f9f9;
	}

	.topic-nav-item {
		height: 100rpx;
	}

	.active {
		background-color: #ffffff;
	}
</style>