<template>
	<tabs-swiper :default-tab-index="tabIndex" :show-search-icon="true" :tabs="tabs" @loadData="loadData" @change="onSwiperChange">
		<swiper-item class="flex-1" v-for="(item,index) in tabs" :key="index">
			<long-page ref="longPage" :category_id="item.id" :type="item.type" :preload="item.preload"></long-page>
		</swiper-item>
	</tabs-swiper>
</template>

<script>
	import type { articleNav,Result } from "@/common/type.uts"
	import { getURL } from "@/common/request.uts"
	import type { TabsSwiperItem } from '@/components/tabs-swiper/type.uts'
	import longPage from '@/pages/long-list/long-list-page.uvue';
	export default {
		components: {
			longPage
		},
		data() {
			return {
				tabIndex:1,
				tabs:[{
					"id": 0,
					"name": "关注",
					"type":"follow",
					"preload":false
				},{
					"id": 2,
					"name": "图文",
					"type":"default",
					"preload":false
				},
				{
					"id": 3,
					"name": "体育",
					"type":"default",
					"preload":false
				},
				{
					"id": 4,
					"name": "热点",
					"type":"default",
					"preload":false
				}] as TabsSwiperItem[],
				// 是否已经加载了分类
				isTabsLoaded:false
			}
		},
		onLoad() {
			this.loadTabs(null)
		},
		onPullDownRefresh() {
			if(!this.isTabsLoaded){
				this.loadTabs(()=>{
					uni.stopPullDownRefresh()
				})
				return
			}
			(this.$refs["longPage"] as ComponentPublicInstance[])[this.tabIndex].$callMethod("refreshData",()=>{
				uni.stopPullDownRefresh()
			})
		},
		methods: {
			// 加载分类
			loadTabs(loadComplete:(()=>void) | null){
				uni.request<Result<articleNav[]>>({
					url: getURL('/category/article'),
					success: res => {
						let r = res.data
						if(r == null) return
						if(res.statusCode !=200){
							uni.showToast({
								title: r.msg,
								icon: 'none'
							});
							return
						}
						
						let tabs = [{
							"id": 0,
							"name": "关注",
							"type":"follow",
							"preload":false
						}] as TabsSwiperItem[]
						let d = r.data as articleNav[]
						d.forEach((o:articleNav,_:number)=>{
							tabs.push({
								id:o.id,
								name:o.title,
								type:"default",
								preload:false
							} as TabsSwiperItem)
						})
						
						this.tabs = tabs
						this.isTabsLoaded = true
						
						this.loadData(this.tabIndex)
					},
					fail: (err) => {
						uni.showToast({
							title: err.errMsg,
							icon: 'none'
						});
					},
					complete: () => {
						if(loadComplete != null) loadComplete()
					}
				});
			},
			// 当滑动时候，用来加载列表数据
			loadData(index:number){
				(this.$refs["longPage"] as ComponentPublicInstance[])[index].$callMethod("loadData",null)
			},
			// 当滑动时候，触发索引变化
			onSwiperChange(index:number){
				this.tabIndex = index
			}
		}
	}
</script>

<style>
	
</style>
